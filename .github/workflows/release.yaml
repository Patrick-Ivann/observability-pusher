name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-24.04
      
    strategy:
      matrix:
        goos: [darwin, linux]
        goarch: [arm64, amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: |
          mkdir -p build
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/obs-push-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Archive build
        run: |
          mkdir -p dist
          zip -j dist/obs-push-${{ matrix.goos }}-${{ matrix.goarch }}.zip build/obs-push-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: obs-push-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/obs-push-${{ matrix.goos }}-${{ matrix.goarch }}.zip

  release:
    needs: [build]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write    

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: obs-push-linux-arm64
          path: dist/linux-arm64
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: obs-push-linux-amd64
          path: dist/linux-amd64
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: obs-push-darwin-arm64
          path: dist/darwin-arm64
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: obs-push-darwin-amd64
          path: dist/darwin-amd64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/linux-arm64/obs-push-linux-arm64.zip
          asset_name: obs-push-linux-arm64.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/linux-amd64/obs-push-linux-amd64.zip
          asset_name: obs-push-linux-amd64.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/darwin-arm64/obs-push-darwin-arm64.zip
          asset_name: obs-push-darwin-arm64.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/darwin-amd64/obs-push-darwin-amd64.zip
          asset_name: obs-push-darwin-amd64.zip
          asset_content_type: application/zip
